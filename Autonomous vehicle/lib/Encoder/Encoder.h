#pragma once
#include <Arduino.h>

class EncoderDriver {
public:
    EncoderDriver();
    void loadConfig(const char* configPath, const char* encoderName);
    void begin();
    long getCount() const;
    void resetIterationPulses();
    void reset();
    float getAngularPosition() const;
    float getAngularSpeed(float deltaTime) const;
    

private:
    uint8_t pinA, pinB;
    int ppr;                //Pulses per revolution: number of pulses generated by the encoder for one full rotation    
    volatile long pulses;
    volatile long accumulatedPulses;
    volatile int lastAState;
    bool direction;
    
    mutable portMUX_TYPE mux;
   
    void handleInterrupt();

    static EncoderDriver* instances[NUM_DIGITAL_PINS];
    static void globalInterruptHandler();

};
